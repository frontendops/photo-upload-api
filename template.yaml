AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  photo-app-api

  Sample SAM Template for photo-app-api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Tracing: Active
  Api:
    Auth:
      DefaultAuthorizer: MyLambdaTokenAuthorizer
      Authorizers:
        MyLambdaTokenAuthorizer:
          FunctionArn: !GetAtt MyAuthFunction.Arn
      ApiKeyRequired: false
    TracingEnabled: true
Resources:
  PhotosBucket:
    Type: AWS::S3::Bucket
  MyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-authorizer/
      Handler: index.handler
      Runtime: nodejs18.x
      Policies:
        - SecretsManagerReadWrite
  PhotoUploadFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Connections:
      Output:
        Destination: ${PhotosBucket}
    Properties:
      CodeUri: photo-upload/
      Handler: app.lambdaHandler
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref PhotosBucket
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        PhotoUpload:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /photo-upload
            Method: POST
            RequestParameters:
              - method.request.querystring.userId:
                  Required: true
                  Caching: false
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PhotoUploadApi:
    Description: API Gateway endpoint URL for Prod stage for Photo Upload function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/photo-upload/"
  PhotoUploadFunction:
    Description: Photo Upload Lambda Function ARN
    Value: !GetAtt PhotoUploadFunction.Arn
  PhotoUploadFunctionIamRole:
    Description: Implicit IAM Role created for Photo Upload function
    Value: !GetAtt PhotoUploadFunctionRole.Arn
